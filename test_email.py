#!/usr/bin/env python3
"""
Test SendGrid email functionality
"""

import sys
import os
from dotenv import load_dotenv

# Add the project root to Python path for imports
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# Load environment variables
load_dotenv()

def test_sendgrid_connection():
    """Test basic SendGrid API connection"""
    print("Testing SendGrid connection...")
    
    try:
        import sendgrid
        from sendgrid.helpers.mail import Mail, Email, To
        
        # Check API key
        api_key = os.getenv('SENDGRID_API_KEY')
        if not api_key:
            print("ERROR: SENDGRID_API_KEY not found in environment")
            return False
            
        print(f"API key found: {api_key[:10]}...")
        
        # Initialize client
        sg = sendgrid.SendGridAPIClient(api_key=api_key)
        print("SendGrid client initialized successfully")
        
        # Test email addresses
        from_email = Email("gabikir1999@gmail.com")
        to_email = To("gabikir1999@gmail.com")  # Sending to self for testing
        
        print(f"From: {from_email.email}")
        print(f"To: {to_email.email}")
        
        # Create simple test email
        subject = "AI Newsletter Tool - Test Email"
        html_content = """
        <html>
        <body>
            <h1>Test Email from AI Newsletter Tool</h1>
            <p>This is a test email to verify SendGrid is working correctly.</p>
            <p>If you received this, the email service is configured properly!</p>
            <hr>
            <p><small>Generated by test_email.py</small></p>
        </body>
        </html>
        """
        
        mail = Mail(from_email, to_email, subject, html_content)
        
        print("Sending test email...")
        response = sg.client.mail.send.post(request_body=mail.get())
        
        print(f"Response status: {response.status_code}")
        print(f"Response body: {response.body}")
        print(f"Response headers: {response.headers}")
        
        if response.status_code == 202:
            print("SUCCESS: Test email sent! Check your inbox.")
            return True
        else:
            print(f"ERROR: SendGrid returned status {response.status_code}")
            return False
            
    except Exception as e:
        print(f"ERROR: Exception occurred: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_email_service():
    """Test the custom email service"""
    print("\n" + "="*50)
    print("Testing custom email service...")
    
    try:
        from src.core.email_service import send_email, update_recipient_email
        
        # Set recipient email
        test_email = "gabikir1999@gmail.com"
        update_recipient_email(test_email)
        print(f"Set recipient email to: {test_email}")
        
        # Test send_email function
        subject = "AI Newsletter Tool - Service Test"
        html_body = """
        <html>
        <body>
            <h1>Service Test Email</h1>
            <p>This email was sent using the custom email service.</p>
            <p>If you received this, the email agent should work correctly!</p>
        </body>
        </html>
        """
        
        result = send_email(subject, html_body)
        print(f"Email service result: {result}")
        
        if result.get("status") == "success":
            print("SUCCESS: Custom email service working!")
            return True
        else:
            print(f"ERROR: Email service failed: {result.get('message')}")
            return False
            
    except Exception as e:
        print(f"ERROR: Exception in email service test: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("AI Newsletter Tool - Email Testing")
    print("=" * 50)
    
    # Test 1: Basic SendGrid connection
    test1_success = test_sendgrid_connection()
    
    # Test 2: Custom email service
    test2_success = test_email_service()
    
    print("\n" + "="*50)
    print("TEST RESULTS:")
    print(f"SendGrid Connection: {'PASS' if test1_success else 'FAIL'}")
    print(f"Email Service: {'PASS' if test2_success else 'FAIL'}")
    
    if test1_success and test2_success:
        print("\nAll tests passed! Email functionality should work.")
    else:
        print("\nSome tests failed. Check the errors above.")
        
    print("\nCheck your email inbox for test messages!")